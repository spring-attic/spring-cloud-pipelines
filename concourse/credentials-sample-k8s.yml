# job parameters
app-url: git@github.com:forkedOrg/github-webhook-kubernetes.git
app-branch: master
version-branch: version
tools-scripts-url: https://github.com/spring-cloud/spring-cloud-pipelines.git
tools-branch: master
maven-local-dir: m2/rootfs
build-options:
pipeline-descriptor: sc-pipelines.yml
project-name:
project-type:

github-private-key: |
  -----BEGIN RSA PRIVATE KEY-----
  ... cert ...
  -----END RSA PRIVATE KEY-----
git-email: your@email.com
git-name: Your Name

paas-type: k8s
# Set this to `true` if you're to call Minikube
kubernetes-minikube: false
mysql-root-password: rootpassword
mysql-user: username
mysql-password: password
docker-username: dockeruser
docker-password: dockerpass
docker-server-id: docker-repo
docker-email: docker@email.com
docker-registry-organization: dockerOrg
docker-registry-url: https://index.docker.io/v1/
paas-test-api-url: kubernetes.default:443
paas-stage-api-url: kubernetes.default:443
paas-prod-api-url: kubernetes.default:443
paas-test-ca: |
  -----BEGIN CERTIFICATE-----
  ... cert ...
  -----END CERTIFICATE-----
paas-stage-ca: |
  -----BEGIN CERTIFICATE-----
  ... cert ...
  -----END CERTIFICATE-----
paas-prod-ca:  |
  -----BEGIN CERTIFICATE-----
  ... cert ...
  -----END CERTIFICATE-----
paas-test-client-token: ...token...
paas-stage-client-token: ...token...
paas-prod-client-token: ...token...
paas-test-cluster-name: take this from `kubectl config current-context`
paas-stage-cluster-name: take this from `kubectl config current-context`
paas-prod-cluster-name: take this from `kubectl config current-context`
paas-test-cluster-username: take this from `kubectl config current-context`
paas-stage-cluster-username: take this from `kubectl config current-context`
paas-prod-cluster-username: take this from `kubectl config current-context`
paas-test-system-name: take this from `kubectl config current-context`
paas-stage-system-name: take this from `kubectl config current-context`
paas-prod-system-name: take this from `kubectl config current-context`
paas-test-namespace: sc-pipelines-test
paas-stage-namespace: sc-pipelines-stage
paas-prod-namespace: sc-pipelines-prod

# Artifactory / Nexus credentials (defaults are for Artifactory)
m2-settings-repo-id: artifactory-local
m2-settings-repo-username: admin
m2-settings-repo-password: password

# if download differs from upload set `repo-with-binaries-for-upload`
# example of such a case is Bintray
repo-with-binaries: https://artifactory:8081/artifactory/libs-release-local
repo-with-binaries-for-upload: https://artifactory:8081/artifactory/libs-release-local

# YOU HAVE TO LEAVE THIS FOR CONCOURSE NOT TO BREAK
# OF COURSE YOU CAN REMOVE THESE ENTRIES FROM
# CREDENTIALS.YML AND PIPELINE.YML AND THEN IT WILL WORK FINE
# remove::start[CF]
app-memory-limit:
java-buildpack-url:
paas-hostname-uuid:
paas-api:
paas-test-username:
paas-test-password:
paas-test-org:
paas-test-space:
paas-stage-username:
paas-stage-password:
paas-stage-org:
paas-stage-space:
paas-prod-username:
paas-prod-password:
paas-prod-org:
paas-prod-space:
# remove::end[CF]
