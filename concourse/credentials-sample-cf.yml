# job parameters
app-url: git@github.com:marcingrzejszczak/github-webhook.git
app-branch: master
version-branch: version
tools-scripts-url: https://github.com/spring-cloud/spring-cloud-pipelines.git
tools-branch: master
build-options: ""
project-name:
project-type:

app-memory-limit: 256m
paas-hostname-uuid:
paas-test-api-url: https://api.local.pcfdev.io
paas-stage-api-url: https://api.local.pcfdev.io
paas-prod-api-url: https://api.local.pcfdev.io
paas-test-username: user
paas-test-password: pass
paas-test-org: pcfdev-org
paas-test-space-prefix: sc-pipelines-test
paas-stage-username: user
paas-stage-password: pass
paas-stage-org: pcfdev-org
paas-stage-space: sc-pipelines-stage
paas-prod-username: user
paas-prod-password: pass
paas-prod-org: pcfdev-org
paas-prod-space: sc-pipelines-prod
paas-type: cf
github-private-key: |
  xxxxxx
git-email: mgrzejszczak@pivotal.io
git-name: Marcin Grzejszczak
java-buildpack-url: https://github.com/cloudfoundry/java-buildpack.git#v3.8.1
pipeline-descriptor: sc-pipelines.yml

# YOU HAVE TO LEAVE THIS FOR CONCOURSE NOT TO BREAK
# OF COURSE YOU CAN REMOVE THESE ENTRIES FROM
# CREDENTIALS.YML AND PIPELINE.YML AND THEN IT WILL WORK FINE
# remove::start[K8S]
kubernetes-minikube:
mysql-root-password:
mysql-user:
mysql-password:
docker-username:
docker-password:
docker-server-id:
docker-email:
docker-registry-organization:
docker-registry-url:
paas-test-ca:
paas-test-namespace:
paas-test-client-token:
paas-test-system-name:
paas-test-cluster-username:
paas-test-cluster-name:
paas-stage-ca:
paas-stage-client-token:
paas-stage-cluster-name:
paas-stage-cluster-username:
paas-stage-system-name:
paas-stage-namespace:
paas-prod-ca:
paas-prod-client-token:
paas-prod-system-name:
paas-prod-cluster-name:
paas-prod-cluster-username:
paas-prod-namespace:
# remove::end[K8S]

# Artifactory / Nexus credentials (defaults are for Artifactory)
m2-settings-repo-id: artifactory-local
m2-settings-repo-username: admin
m2-settings-repo-password: password

# if download differs from upload set `repo-with-binaries-for-upload`
# example of such a case is Bintray
repo-with-binaries: https://192.168.99.100:8081/artifactory/libs-release-local
repo-with-binaries-for-upload: https://192.168.99.100:8081/artifactory/libs-release-local
